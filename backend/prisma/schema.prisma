generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String         @id @default(uuid())
  email             String         @unique
  name              String
  password          String
  contactNo         String
  location          String?
  services          Service[]      @relation("UserServices")
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  notifications     Notification[]
}

enum ServiceProviderMode {
  offline
  online
}

model ServiceProvider {
  id                Int            @id @default(autoincrement())
  email             String         @unique
  name              String
  password          String
  contactNo         String         @unique
  type              String?
  mode              ServiceProviderMode  
  location          String?
  profileImageUrl   String?
  rating            Float          @default(0.0)
  reviews           Review[]
  services          Service[]      @relation("ProviderServices")
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  notifications     Notification[]
}

model Service {
  id               Int               @id @default(autoincrement())
  userId           String?
  providerId       Int?
  serviceType      String
  name             String
  description      String?
  price            Float?
  timing           String?
  category         String
  images           String[]
  location         String
  contactNo        String
  user             User?             @relation("UserServices", fields: [userId], references: [id])
  provider         ServiceProvider?  @relation("ProviderServices", fields: [providerId], references: [id]) 
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model Review {
  id               Int               @id @default(autoincrement())
  providerId       Int
  provider         ServiceProvider   @relation(fields: [providerId], references: [id])
  rating           Float
  comment          String?
  createdAt        DateTime          @default(now())
}

model Notification {
  id         String       @id @default(uuid())
  userId     String?
  providerId Int?
  content    String
  read       Boolean      @default(false)
  user       User?        @relation(fields: [userId], references: [id])
  provider   ServiceProvider? @relation(fields: [providerId], references: [id])
  createdAt  DateTime     @default(now())
}

